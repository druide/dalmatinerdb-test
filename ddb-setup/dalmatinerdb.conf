## The tcp port dalmatiner_db listens on for the tcp API
##
## Default: 5555
##
## Acceptable values:
##   - an integer
tcp_port = 5555

## Number of acceptor processes to keep around for tcp connections.
##
## Default: 100
##
## Acceptable values:
##   - an integer
tcp_listeners = 100

## Number of allowed concurrent tcp connections.
##
## Default: 1024
##
## Acceptable values:
##   - an integer
tcp_max_connections = 1024

## The number of Asyncronous worker for a vnode.
##
## Default: 5
##
## Acceptable values:
##   - an integer
async_workers = 5

## When handling handoffs how much should be the largest chunk be.
## Large chunks improve thourhgput but too large chunks will cause
## timeouts.
##
## Default: 1KB
##
## Acceptable values:
##   - a byte size with units, e.g. 10GB
handoff_max_chunk_size = 1KB

## The datapoints stored per file, default equals 1 week of data
## in a 1 second resolution.
##
## Default: 604800
##
## Acceptable values:
##   - an integer
points_per_file = 604800

## How many datapoints are cached before being written to disk. This
## is a maximum value, writes also occour before a specific metric is read,
## this effects lost data on crashes.
##
## Default: 120
##
## Acceptable values:
##   - an integer
cache_points = 600

## How long data is kept by default, measured either in points
## or infinity for not deleting old data. This can be changed on a
## per bucket level using ddb-admin
##
## Default: infinity
##
## Acceptable values:
##   - an integer
##   - the text "infinity"
lifetime = infinity

## Maximum number of files kept open per mstore, settings
## over two have no effect, settings below 0 eqal to 0.
##
## Default: 2
##
## Acceptable values:
##   - an integer
mstore.max_files = 2

## How often a pertition will be picked to be vacuumed.
##
## Default: 1h
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
vacuum_interval = 1h

## The number of copies of the data that is keeped.
## For good consistency N > (R + W) should be true.
##
## Default: 1
##
## Acceptable values:
##   - an integer
n = 1

## The number of replies requried for a read request to succeed
## The lower the value the faster the replies but the more likely stale
## data is returend.
##
## Default: 1
##
## Acceptable values:
##   - an integer
r = 1

## The number of replies requried for a write request to succeed
## The lower the value the faster the write but the more likely to only
## write partial data.
##
## Default: 1
##
## Acceptable values:
##   - an integer
w = 1

## Schema directory
##
## Default: ./share/schema
##
## Acceptable values:
##   - text
schema_dir = ./share/schema

## enable / disable self monitoring
##
## Default: on
##
## Acceptable values:
##   - on or off
self_monitor = on

## Transport compression for sending data between the vnode
## and the reading node.
##
## Default: snappy
##
## Acceptable values:
##   - one of: snappy, none
metrics.transport_compression = snappy

## Weather to exclude repairs for reads done over the most
## recent period of time. This can significanty reduce the number
## of reads repairs when queries are executed against very recent data.
##
## Default: 1m
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
read_repair.delay = 1m

## Number of asyncronous IO requests that won't block the vnode.
## A highter number reduces blockage but can lead to piling up of requests.
##
## Default: 20
##
## Acceptable values:
##   - an integer
io.max_async = 20

## How long a syncronous IO request is allowed to take before
## considering it crashed.
##
## Default: 30s
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
io.timeout = 30s

## Async reads are performed out of band of writes, this way
## larger reads can be performed without blocking other actions.
##
## Default: off
##
## Acceptable values:
##   - on or off
io.parallel_reads = off

## The size of the async worker pool, more workers mean more possible
## parallelism
##
## Default: 5
##
## Acceptable values:
##   - an integer
io.parallel_reads.queue_size = 5

## Minimal size of read requests to be considered for asyncronous
## reads, this has no effect when async_reads is set to off
##
## Default: 1000
##
## Acceptable values:
##   - an integer
io.parallel_reads.min_size = 1000

## Some requests to the vnodes are handled by an asyncronous worker pool.
## This parameter allows for tuning this pools behaviour when it comes dealing
## with requests that are queued.
## The default (fifo) will serve requests in the order they arrive at the worker
## pool. The alternative is to serve the requests in the reverse order, dealing
## with the most recent request first.
## There are pro's and con's for both aproaches, it is best to test out what
## works best for the desired characteristics.
## As a very rought rule of thumb:
## - fifo will lead to lower extremes
## - filo will lead to lower medians/mediums
##
## Default: fifo
##
## Acceptable values:
##   - one of: fifo, filo
io.parallel_reads.queue_strategy = fifo

## Name of the Erlang node
##
## Default: dalmatinerdb@127.0.0.1
##
## Acceptable values:
##   - text
nodename = dalmatinerdb@127.0.0.1

## Cookie for distributed node communication.  All nodes in the
## same cluster should use the same cookie or they will not be able to
## communicate.
##
## Default: erlang
##
## Acceptable values:
##   - text
distributed_cookie = erlang

## Sets the number of threads in async thread pool, valid range
## is 0-1024. If thread support is available, the default is 64.
## More information at: http://erlang.org/doc/man/erl.html
##
## Default: 64
##
## Acceptable values:
##   - an integer
erlang.async_threads = 64

## The number of concurrent ports/sockets
## Valid range is 1024-134217727
##
## Default: 65536
##
## Acceptable values:
##   - an integer
erlang.max_ports = 65536

## enable active anti-entropy subsystem
##
## Default: on
##
## Acceptable values:
##   - one of: on, off, debug
anti_entropy = on

## Restrict how fast AAE can build hash trees. Building the tree
## for a given partition requires a full scan over that partition's
## data. Once built, trees stay built until they are expired.
## Config is of the form:
## {num-builds, per-timespan}
## Default is 1 build per hour.
##
## Default: 1
##
## Acceptable values:
##   - an integer
anti_entropy.build_limit.number = 1

##
## Default: 1h
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
anti_entropy.build_limit.per_timespan = 1h

## Determine how often hash trees are expired after being built.
## Periodically expiring a hash tree ensures the on-disk hash tree
## data stays consistent with the actual k/v backend data. It also
## helps Riak identify silent disk failures and bit rot. However,
## expiration is not needed for normal AAE operation and should be
## infrequent for performance reasons. The time is specified in
## milliseconds. The default is 1 week.
##
## Default: 1w
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
anti_entropy.expire = 1w

## Limit how many AAE exchanges/builds can happen concurrently.
##
## Default: 2
##
## Acceptable values:
##   - an integer
anti_entropy.concurrency = 2

## The tick determines how often the AAE manager looks for work
## to do (building/expiring trees, triggering exchanges, etc).
## The default is every 15 seconds. Lowering this value will
## speedup the rate that all replicas are synced across the cluster.
## Increasing the value is not recommended.
##
## Default: 15s
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
anti_entropy.tick = 15s

## The directory where AAE hash trees are stored.
##
## Default: /data/dalmatinerdb/db/anti_entropy
##
## Acceptable values:
##   - text
anti_entropy.data_dir = /data/dalmatinerdb/db/anti_entropy

## This parameter defines the percentage, 1 to 100, of total
## server memory to assign to leveldb.  leveldb will dynamically
## adjust it internal cache sizs as Riak activates / inactivates
## vnodes on this server to stay within this size.  The memory size
## can alternately be assigned as a byte count via total_leveldb_mem instead.
##
## Default: 80
##
## Acceptable values:
##   - an integer
anti_entropy.total_leveldb_mem_percent = 80

## Each database .sst table file can include an optional "bloom filter"
## that is highly effective in shortcutting data queries that are destined
## to not find the requested key. The bloom_filter typically increases the
## size of an .sst table file by about 2%. This option must be set to true
## in the riak.conf to take effect.
##
## Default: on
##
## Acceptable values:
##   - one of: on, off
anti_entropy.bloomfilter = on

## Default ring creation size.  Make sure it is a power of 2,
## e.g. 16, 32, 64, 128, 256, 512 etc
## This is set to a default of 4 to work in a one server installation
## if you plan to expand your system please set it higher and reads
## the manual at http://bit.ly/1ciKRkS
##
## Default: 64
##
## Acceptable values:
##   - an integer
## ring_size = 64
ring_size = 16

## Number of concurrent node-to-node transfers allowed.
##
## Default: 2
##
## Acceptable values:
##   - an integer
## transfer_limit = 2

## Default cert location for https can be overridden
## with the ssl config variable, for example:
##
## Acceptable values:
##   - the path to a file
## ssl.certfile = $(platform_etc_dir)/cert.pem

## Default key location for https can be overridden with the ssl
## config variable, for example:
##
## Acceptable values:
##   - the path to a file
## ssl.keyfile = $(platform_etc_dir)/key.pem

## Default signing authority location for https can be overridden
## with the ssl config variable, for example:
##
## Acceptable values:
##   - the path to a file
## ssl.cacertfile = $(platform_etc_dir)/cacertfile.pem

## handoff.ip is the network address that Riak binds to for
## intra-cluster data handoff.
##
## Default: 127.0.0.1
##
## Acceptable values:
##   - text
handoff.ip = 127.0.0.1

## The time a vnode has to be idle for a handoff to occour. (I think)
##
## Default: 1m
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
handoff.inactivity_timeout = 1m

## DTrace support Do not enable 'dtrace' unless your Erlang/OTP
## runtime is compiled to support DTrace.  DTrace is available in
## R15B01 (supported by the Erlang/OTP official source package) and in
## R14B04 via a custom source repository & branch.
##
## Default: off
##
## Acceptable values:
##   - on or off
dtrace = off

## Platform-specific installation paths (substituted by rebar)
##
## Default: ./bin
##
## Acceptable values:
##   - the path to a directory
platform_bin_dir = ./bin

## The path data gets stored into.
##
## Default: /data/dalmatinerdb/db
##
## Acceptable values:
##   - text
platform_data_dir = /data/dalmatinerdb/db

##
## Default: /data/dalmatinerdb/etc
##
## Acceptable values:
##   - the path to a directory
platform_etc_dir = /data/dalmatinerdb/etc

##
## Default: ./lib
##
## Acceptable values:
##   - the path to a directory
platform_lib_dir = ./lib

##
## Default: /data/dalmatinerdb/log
##
## Acceptable values:
##   - the path to a directory
platform_log_dir = /data/dalmatinerdb/log

## Enable consensus subsystem. Set to 'on' to enable the
## consensus subsystem used for strongly consistent Riak operations.
##
## Default: off
##
## Acceptable values:
##   - on or off
## strong_consistency = on

## Some requests to the vnodes are handled by an asyncronous worker pool.
## This parameter allows for tuning this pools behaviour when it comes dealing
## with requests that are queued.
## The default (fifo) will serve requests in the order they arrive at the worker
## pool. The alternative is to serve the requests in the reverse order, dealing
## with the most recent request first.
## There are pro's and con's for both aproaches, it is best to test out what
## works best for the desired characteristics.
## As a very rought rule of thumb:
## - fifo will lead to lower extremes
## - filo will lead to lower medians/mediums
##
## Default: fifo
##
## Acceptable values:
##   - one of: fifo, filo
worker.queue_strategy = fifo

## where do you want the console.log output:
## off : nowhere
## file: the file specified by log.console.file
## console : standard out
## both : log.console.file and standard out.
##
## Default: dalmatinerdb
##
## Acceptable values:
##   - text
log.service = dalmatinerdb

##
## Default: file
##
## Acceptable values:
##   - one of: off, file, console, both
log.console = file

## the log level of the console log
##
## Default: info
##
## Acceptable values:
##   - one of: debug, info, warning, error
log.console.level = info

## location of the console log
##
## Default: /data/dalmatinerdb/log/console.log
##
## Acceptable values:
##   - the path to a file
log.console.file = /data/dalmatinerdb/log/console.log

## location of the error log
##
## Default: /data/dalmatinerdb/log/error.log
##
## Acceptable values:
##   - the path to a file
log.error.file = /data/dalmatinerdb/log/error.log

## location of the debug log
##
## Default: off
##
## Acceptable values:
##   - the text "off"
##   - the path to a file
## log.debug.file = /data/dalmatinerdb/log/debug.log

## turn on syslog
##
## Default: off
##
## Acceptable values:
##   - one of: on, off
log.syslog = off

## The ip of the graylog server
##
## Default: off
##
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
##   - the text "off"
## log.graylog.host = 127.0.0.1:12201

## the log level of the graylog log
##
## Default: info
##
## Acceptable values:
##   - one of: debug, info, warning, error
log.graylog.level = info

## The ip of the graylog server
##
## Default: off
##
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
##   - the text "off"
## log.logstash.host = 127.0.0.1:9125

## the log level of the graylog log
##
## Default: info
##
## Acceptable values:
##   - one of: debug, info, warning, error
log.logstash.level = info

## Whether to write a crash log, and where.
## Commented/omitted/undefined means no crash logger.
##
## Default: /data/dalmatinerdb/log/crash.log
##
## Acceptable values:
##   - text
log.crash.file = /data/dalmatinerdb/log/crash.log

## Maximum size in bytes of events in the crash log - defaults to 65536
##
## Default: 64KB
##
## Acceptable values:
##   - a byte size with units, e.g. 10GB
log.crash.msg_size = 64KB

## Maximum size of the crash log in bytes, before its rotated, set
## to 0 to disable rotation - default is 0
##
## Default: 10MB
##
## Acceptable values:
##   - a byte size with units, e.g. 10GB
log.crash.size = 10MB

## What time to rotate the crash log - default is no time
## rotation. See the lager README for a description of this format:
## https://github.com/basho/lager/blob/master/README.org
##
## Default: $D0
##
## Acceptable values:
##   - text
log.crash.date = $D0

## Number of rotated crash logs to keep, 0 means keep only the
## current one - default is 0
##
## Default: 5
##
## Acceptable values:
##   - an integer
log.crash.count = 5

## Whether to redirect error_logger messages into lager - defaults to true
##
## Default: on
##
## Acceptable values:
##   - one of: on, off
log.error.redirect = on

## maximum number of error_logger messages to handle in a second
## lager 2.0.0 shipped with a limit of 50, which is a little low for riak's startup
##
## Default: 100
##
## Acceptable values:
##   - an integer
log.error.messages_per_second = 100

## How often otters will scan the cache and send batch data
## to zapkin.
##
## Default: 100ms
##
## Acceptable values:
##   - a time duration with units, e.g. '10s' for 10 seconds
otters.batch_interval = 100ms

## the Zapkin URL.
##
## Default: http://127.0.0.1:9411/api/v1/spans
##
## Acceptable values:
##   - text
otters.zapkin_url = http://127.0.0.1:9411/api/v1/spans

## The host otters will declare to send datas from.
##
## Default: 127.0.0.1:0
##
## Acceptable values:
##   - an IP/port pair, e.g. 127.0.0.1:10011
otters.host = 127.0.0.1:0

## Default service name otter reports
##
## Default: dalmatinerdb
##
## Acceptable values:
##   - text
otters.service = dalmatinerdb

## Weather or not to add the default host to logs or not
##
## Default: off
##
## Acceptable values:
##   - on or off
otters.add_service_to_log = off

## Weather or not to add the default host to tags or not
##
## Default: off
##
## Acceptable values:
##   - on or off
otters.add_service_to_tags = off

## Default service logs or tags are tagged with.
##
## Default: lc
##
## Acceptable values:
##   - text
otters.default_key = lc

## Default service logs or tags are tagged with.
##
## Default: v
##
## Acceptable values:
##   - text
otters.default_value = v

## File to read filter rules from
##
## Acceptable values:
##   - the path to a file
## otters.filter = rules.ot

